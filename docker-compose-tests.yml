services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=test_db
    depends_on:
      postgres-test:
        condition: service_healthy
    networks:
      - my_network

  postgres-test:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_db
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  migrate-test:
    build: .
    command: alembic upgrade head
    depends_on:
      postgres-test:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres-test:5432/test_db
    networks:
      - my_network

  tests:
    build:
      context: .
      dockerfile: test.Dockerfile
    command: pytest
    depends_on:
      migrate-test:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres-test:5432/test_db
    networks:
      - my_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/main/static:ro
    depends_on:
      - web
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  postgres_test_data:
